{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { BehaviorSubject, catchError, map, tap } from 'rxjs';\nimport { User } from './user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let ApiRequestService = /*#__PURE__*/(() => {\n  class ApiRequestService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router; // ************************** create user instance **************************************************\n\n      this.user = new BehaviorSubject(null); // why behaviorsubject? so it can also give subscriber the immediate access to previos emitted value,\n    } // ************************  registation page  *******************************************************\n\n\n    createAndStorePost(postData) {\n      console.log(postData);\n      return this.http.post('http://127.0.0.1:8000/api/users/add', postData);\n    }\n\n    validateUser(email) {\n      // console.log(email);\n      return this.http.get('http://127.0.0.1:8000/api/users/validate', {\n        headers: new HttpHeaders({\n          Accept: 'application/json'\n        }),\n        params: new HttpParams().set('email', email)\n      });\n    }\n\n    fetchRegistPost() {\n      return this.http.get('http://127.0.0.1:8000/api/data').pipe(map(responseData => {\n        const postArray = [];\n\n        for (const key in responseData) {\n          if (responseData.hasOwnProperty(key)) {\n            postArray.push(Object.assign(Object.assign({}, responseData[key]), {\n              id: key\n            }));\n          }\n        }\n\n        return postArray;\n      }));\n    } // ********************************************* LOGIN CODE *******************************************************************\n\n\n    autoLogin() {\n      const userData = JSON.parse(localStorage.getItem('userData'));\n\n      if (!userData) {\n        return;\n      }\n\n      const loadUser = new User(userData.email, userData.id, userData._token, new Date(userData._tokenExpirationDate));\n\n      if (loadUser.token) {\n        this.user.next(loadUser);\n        const expirationDuration = new Date(userData._tokenExpirationDate).getTime() - new Date().getTime();\n        this.autoLogOut(expirationDuration);\n      }\n    }\n\n    UserLogin(postData) {\n      // console.log(postData[0]);\n      return this.http.post('http://127.0.0.1:8000/api/users/get_UserLogin', {\n        'email': postData[0],\n        'pass': postData[1]\n      }).pipe(catchError(this.handleError), tap(responseData => {\n        var dt = new Date();\n        const expirationDate = new Date(dt.setHours(dt.getHours() + 1)); //console.log(\"dateTime= \"+expirationDate+\"  ---email= \"+responseData['data']['email']);\n\n        const user = new User(responseData['data']['email'], responseData['data']['id'], responseData['token'], expirationDate);\n        this.user.next(user); //we stored the user date and used that \"next\" which is used with subjext indicating that this is now current user\n\n        this.autoLogOut(3600000); //2 hour in millisec\n\n        localStorage.setItem('userData', JSON.stringify(user)); //convert angular object to string\n      }));\n    }\n\n    handleError(errResp) {\n      let errorMessage = \"Unknown  error occured\";\n      return errorMessage;\n    } // ===================  LOGOUT  ======================================================\n\n\n    LogOut() {\n      this.user.next(null);\n      this.router.navigate([\"/login\"]);\n      localStorage.removeItem('userData');\n\n      if (this.localExpirationTimer) {\n        clearTimeout(this.localExpirationTimer);\n      }\n\n      this.localExpirationTimer = null; //important\n    }\n\n    autoLogOut(ExpirationTimer) {\n      this.localExpirationTimer = setTimeout(() => {\n        this.LogOut();\n      }, ExpirationTimer);\n    } // ========================= END LOGOUT   ===================================================\n\n\n    fetchData(id) {\n      return this.http.post('http://127.0.0.1:8000/api/users/fetchData', {\n        'id': id\n      });\n    } // ========================= Get rates from Canada post API  ===================================================\n\n\n    getRatesFromCanadaPostAPI(postData) {\n      console.log(postData);\n      return this.http.get('http://127.0.0.1:8000/api/CanadaPostAPI/getRates', {\n        headers: new HttpHeaders({\n          Accept: 'application/json'\n        }),\n        params: new HttpParams().set('from', postData[0]).set('to', postData[1]).set('length', postData[2]).set('width', postData[3]).set('height', postData[4]).set('weight', postData[5])\n      });\n    }\n\n  }\n\n  ApiRequestService.ɵfac = function ApiRequestService_Factory(t) {\n    return new (t || ApiRequestService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  ApiRequestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiRequestService,\n    factory: ApiRequestService.ɵfac\n  });\n  return ApiRequestService;\n})();","map":null,"metadata":{},"sourceType":"module"}